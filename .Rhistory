install.packages("httr") # once per machine

print(p_full_uri)
p_full_uri <- paste0(p_base_uri, p_endpoint, "/house/", state, "/current.json")
response <- GET(p_full_uri, add_headers("X-API-Key" = propublica_key))
results <- fromJSON(content(response, "text"))
View(results)
View(results)
reps <- results$results
View(reps)
reps_gender <- reps %>%
select(name, gender)
View(reps_gender)
reps_party <- reps %>%
select(name, party)
specific_rep <- reps[1,]
View(specific_rep)
spec_name <- specific_rep$name
spec_id <- specific_rep$id
member <- paste0(p_base_uri, p_endpoing, "/", spec_id, ".json")
member <- paste0(p_base_uri, p_endpoint, "/", spec_id, ".json")
votes <- paste0(p_base_uri, p_endpoint, "/", spec_id, "/votes.json")
votes_uri <- paste0(p_base_uri, p_endpoint, "/", spec_id, "/votes.json")
member_uri <- paste0(p_base_uri, p_endpoint, "/", spec_id, ".json")
member <- response <- GET(member_uri, add_headers("X-API-Key" = propublica_key))
votes <- response <- GET(votes_uri, add_headers("X-API-Key" = propublica_key))
member <- GET(member_uri, add_headers("X-API-Key" = propublica_key))
votes <- GET(votes_uri, add_headers("X-API-Key" = propublica_key))
member_res <- GET(member_uri, add_headers("X-API-Key" = propublica_key))
votes_res <- GET(votes_uri, add_headers("X-API-Key" = propublica_key))
member <- fromJSON(content(member_res, "text"))
votes <- fromJSON(content(votes_res, "text"))
View(votes)
View(votes)
member <- member$results
votes <- votes$results
View(votes)
View(specific_rep)
votes <- fromJSON(content(votes_res, "text"))
View(votes)
votes <- votes$votes
votes <- votes$results
votes <- fromJSON(content(votes_res, "text"))
votes <- votes$votes
votes <- fromJSON(content(votes_res, "text"))
votes <- votes$results$votes
View(votes)
votes <- votes$results
votes_res <- GET(votes_uri, add_headers("X-API-Key" = propublica_key))
votes <- votes$results
votes <- fromJSON(content(votes_res, "text"))
votes[["results"]][["votes"]][[1]]
votes <- votes$results$votes
View(votes)
votes <- votes$results$votes[1]
votes <- votes[["results"]][["votes"]][[1]]
votes <- votes[["results"]][["votes"]][[1]]
View(votes[["results"]][["votes"]][[1]])
votes <- fromJSON(content(votes_res, "text"))
View(votes)
votes <- votes[["results"]][["votes"]][[1]]
View(votes)
source("civic-info.R")
source("propublica.R")
ci_uri_full <- paste0(ci_base_uri, ci_rep_endpoint)
ci_rep_endpoint <- "/representatives"
ci_uri_full <- paste0(ci_base_uri, ci_rep_endpoint)
>>>>>>> 291daa42337d307b1cd052738c2ad4489759a3da
library("httr")
install.packages("jsonlite") # once per machine
library("jsonlite")
shiny::runApp('C:/Users/Phung Phu/Dropbox/info201/final_project')
library(shiny)
library(ggplot2)
library(dplyr)
library(lintr)
library(genius)
library(tidyverse)
library(songsim)
library(syuzhet)
library(countrycode)
library(DT)
runApp('C:/Users/Phung Phu/Dropbox/info201/final_project')
runApp('C:/Users/Phung Phu/Dropbox/info201/final_project')
runApp('C:/Users/Phung Phu/Dropbox/info201/final_project')
library(shiny)
library(ggplot2)
library(dplyr)
library(lintr)
library(genius)
library(tidyverse)
library(songsim)
library(syuzhet)
library(shiny)
library(ggplot2)
library(dplyr)
library(lintr)
library(genius)
library(tidyverse)
library(songsim)
library(syuzhet)
library(countrycode)
library(DT)
setwd("C:/Users/Phung Phu/Dropbox/info201/final_project")
library(shiny)
library(ggplot2)
library(dplyr)
library(lintr)
library(genius)
library(tidyverse)
library(songsim)
library(syuzhet)
library(countrycode)
library(DT)
library(shiny)
library(ggplot2)
library(dplyr)
library(lintr)
library(genius)
library(tidyverse)
library(songsim)
library(syuzhet)
library(shiny)
library(ggplot2)
library(dplyr)
library(lintr)
library(genius)
library(tidyverse)
library(songsim)
library(syuzhet)
# Test Code
n <- get_sent("Post Malone", "rockstar")
get_graph(n)
shiny::runApp()
# Test Code
n <- get_sent("Post Malone", "rockstar")
get_graph(n)
runApp()
runApp()
# ui.R
>>>>>>> 291daa42337d307b1cd052738c2ad4489759a3da
library(shiny)
library(ggplot2)
library(dplyr)
library(lintr)
library(genius)
library(tidyverse)
library(songsim)
=======
install.packages(“devtools”)
devtools::install_github("gsimchoni/songsim")
shiny::runApp()
runApp()
runApp()
View(vals)
View(n)
us_top <- read.csv("data/us_top200.csv", stringsAsFactors = FALSE)
View(us_top)
colnames(vals) <- c("Position", "Repetitiveness")
rep <- right_join(us_top, vals, by = "Postion")
rep <- right_join(us_top, vals, by = "Position")
View(rep)
rep <- right_join(us_top, vals, by = "Position") %>%
select(Track.Name, Artist, URL, Repetitiveness)
avg <- mean(vals$Position)
avg <- mean(vals$Repetitiveness)
#vals <- read.csv("data/calculated_sim.csv", stringsAsFactors = FALSE)
#avg <- mean(vals$Repetitiveness)
avg_rep <- 1.99
setwd("~/Desktop/final_project")
#colnames(vals) <- c("Position", "Repetitiveness")
#us_top <- read.csv("data/us_top200.csv", stringsAsFactors = FALSE)
rep <- right_join(us_top, vals, by = "Position") %>%
select(Track.Name, Artist, URL, Repetitiveness) %>%
mutate(Song = paste0("[", Track.Name, "](", URL, ")"))
#colnames(vals) <- c("Position", "Repetitiveness")
#us_top <- read.csv("data/us_top200.csv", stringsAsFactors = FALSE)
rep <- right_join(us_top, vals, by = "Position") %>%
mutate(Song = paste0("[", Track.Name, "](", URL, ")")) %>%
select(Song, Artist, Repetitiveness)
write.csv(rep, "repetitiveness.csv")
rep <- read.csv("repetitiveness.csv", stringsAsFactors = FALSE)
View(rep)
rep <- read.csv("repetitiveness.csv", stringsAsFactors = FALSE) %>%
select(Song, Artist, Repetitiveness)
runApp()
runApp()
runApp()
runApp()
#avg <- mean(vals$Repetitiveness)
#colnames(vals) <- c("Position", "Repetitiveness")
#us_top <- read.csv("data/us_top200.csv", stringsAsFactors = FALSE)
rep <- right_join(us_top, vals, by = "Position") %>%
mutate(Song = paste0("<a href =\"", URL, "\">", Track.Name, "</a>")) %>%
select(Song, Artist, Repetitiveness)
View(rep)
runApp()
runApp()
rep <- read.csv("repetitiveness.csv", stringsAsFactors = FALSE) %>%
select(Song, Artist, Repetitiveness)
runApp()
View(rep)
# for (i in 1:itrs) {
#   curr <- us_top[i,]
#   curr_artist <- curr$Artist
#   curr_song <- curr$Track.Name
#   ls [[i]] <- find_sim_val(curr_artist, curr_song)
# }
# ls[1:200]
# v <- unlist(ls, use.names = FALSE)
# df <- data.frame(v)
#write.csv("data/calculated_sim.csv")
vals <- read.csv("data/calculated_sim.csv", stringsAsFactors = FALSE)
#avg <- mean(vals$Repetitiveness)
#colnames(vals) <- c("Position", "Repetitiveness")
#us_top <- read.csv("data/us_top200.csv", stringsAsFactors = FALSE)
rep <- right_join(us_top, vals, by = "Position") %>%
mutate(Song = paste0("<a href =\"", URL, "\">", Track.Name, "</a>")) %>%
select(Song, Artist, Repetitiveness)
View(vals)
#avg <- mean(vals$Repetitiveness)
colnames(vals) <- c("Position", "Repetitiveness")
#us_top <- read.csv("data/us_top200.csv", stringsAsFactors = FALSE)
rep <- right_join(us_top, vals, by = "Position") %>%
mutate(Song = paste0("<a href =\"", URL, "\">", Track.Name, "</a>")) %>%
select(Song, Artist, Repetitiveness)
write.csv(rep, "repetitiveness.csv")
rep <- read.csv("repetitiveness.csv", stringsAsFactors = FALSE) %>%
select(Song, Artist, Repetitiveness)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#Avg repetitiveness
avg_rep <- "1.99%"
runApp()
shiny::runApp()
runApp()
source("sentiment_func.R")
runApp()
runApp()
runApp()
shiny::runApp()
us_top <- read.csv("data/us_top200.csv", stringsAsFactors = FALSE)
us_top <- us_top[order(us_top$Track.Name),]
View(us_top)
runApp()
runApp()
runApp()
runApp()
runApp()
>>>>>>> 291daa42337d307b1cd052738c2ad4489759a3da
runApp()
